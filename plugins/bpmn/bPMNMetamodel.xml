<?xml version="1.0" encoding="utf-8"?>
<metamodel xmlns="http://schema.real.com/schema/">
    <namespace>UML 2.0</namespace>
    <diagram nodeName="BPMNDiagramNode" name="BPMNDiagram" displayedName="BPMN Diagram">
        <nonGraphicTypes>
            <port name="StartEventLeft"/>
            <port name="StartEventVertical"/>
            <port name="StartEventRight"/>
            <port name="IntermediateEventLeft"/>
            <port name="IntermediateEventVertical"/>
            <port name="IntermediateEventRight"/>
            <port name="EndEventLeft"/>
            <port name="EndEventVertical"/>
            <port name="EndEventRight"/>
            <port name="GatewayLeft"/>
            <port name="GatewayVertical"/>
            <port name="GatewayRight"/>
            <port name="TaskLeft"/>
            <port name="TaskVertical"/>
            <port name="TaskRight"/>
            <port name="SubprocessLeft"/>
            <port name="SubprocessVertical"/>
            <port name="SubprocessRight"/>
            <port name="EventSubprocessLeft"/>
            <port name="EventSubprocessVertical"/>
            <port name="EventSubprocessRight"/>
            <port name="TaskLeft"/>
            <port name="TaskVertical"/>
            <port name="TaskRight"/>
			<port name="DataLeft"/>
			<port name="DataVertical"/>
			<port name="DataRight"/>
            <enum name="StartEventType" displayedName="Start Event Type">
                <value>None</value>
                <value>Message</value>
                <value>Timer</value>
                <value>Conditional</value>
				<value>Error</value>
				<value>Escalation</value>
				<value>Compensation</value>
				<value>Signal</value>
                <value>Multiple</value>
                <value>Parallel Multiple</value>
            </enum>
            <enum name="StartEventNonInterruptingType" displayedName="Non-Interrupting Start Event Type">
                <value>None</value>
                <value>Message</value>
                <value>Timer</value>
                <value>Conditional</value>
				<value>Escalation</value>
				<value>Signal</value>
                <value>Parallel Multiple</value>
                <value>Multiple</value>
            </enum>
            <enum name="IntermediateEventType" displayedName="Intermediate Event Type">
                <value>None</value>
                <value>Receive Message</value>
                <value>Send Message</value>
                <value>Timer</value>
                <value>Conditional</value>
                <value>Multiple Catch</value>
                <value>Multiple Throw</value>
                <value>Catch Signal</value>
                <value>Throw Signal</value>
                <value>Catch Link</value>
                <value>Throw Link</value>
                <value>Compensation</value>
                <value>Escalation</value>
                <value>Parallel Multiple (Catch)</value>
            </enum>
            <enum name="EndEventType" displayedName="End Event Type">
                <value>None</value>
                <value>Message</value>
                <value>Terminate</value>
                <value>Error</value>
                <value>Escalation</value>
                <value>Cancel</value>
                <value>Compensation</value>
                <value>Multiple</value>
                <value>Signal</value>
            </enum>
            <enum name="GatewayType" displayedName="Gateway Type">
                <value>Exclusive (Data Based)</value>
                <value>Exclusive (Event Based)</value>
                <value>Inclusive</value>
                <value>Parallel</value>
				<value>Complex</value>
            </enum>
            <enum name="LoopType" displayedName="Loop Type">
                <value>No Loop</value>
                <value>Multiple Instances (Parallel)</value>
                <value>Multiple Instances (Sequential)</value>
				<value>Standard Loop</value>
            </enum>
            <enum name="TaskType" displayedName="Task Type">
				<value>Abstract</value>
				<value>Service</value>
				<value>Send</value>
				<value>Receive</value>
				<value>User</value>
				<value>Manual</value>
				<value>Business Rule</value>
				<value>Script</value>
			</enum>
        </nonGraphicTypes>
        <graphicTypes>
            <node name="BPMNDiagramNode" displayedName="BPMN Diagram">
                <graphics>
                    <picture/>
                    <labels/>
                    <ports/>
                </graphics>
                <logic>
                    <container>
                         <contains type="BPMNDiagram::StartEvent"/>
                         <contains type="BPMNDiagram::IntermediateEvent"/>
                         <contains type="BPMNDiagram::EndEvent"/>
                         <contains type="BPMNDiagram::Gateway"/>
                         <contains type="BPMNDiagram::Task"/>
                         <contains type="BPMNDiagram::Subprocess"/>
                         <contains type="BPMNDiagram::EventSubprocess"/>
                         <contains type="BPMNDiagram::SequenceFlow"/>
                         <contains type="BPMNDiagram::SignalBoundaryEvent"/>
                         <contains type="BPMNDiagram::TimerBoundaryEvent"/>
                         <contains type="BPMNDiagram::CompensationBoundaryEvent"/>
                         <contains type="BPMNDiagram::MessageFlow"/>
                         <contains type="BPMNDiagram::Lane"/>
                         <contains type="BPMNDiagram::Pool"/>
                    </container>
                </logic>
            </node>
            <node name="StartEvent" displayedName="Start Event">
                <graphics>
                    <picture sizex="100" sizey="100">
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="0" y2="100" fill-style="none" x1="0" x2="100"/>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="30" y2="70" fill-style="none" x1="15" x2="85">
                            <showIf value="Message" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="30" y2="50" fill-style="none" x1="15" x2="50">
                            <showIf value="Message" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="30" fill-style="none" x1="50" x2="85">
                            <showIf value="Message" property="Type" sign="="/>
                        </line>
                        <polygon fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" n="5" y1="25" y2="45" y3="75" y4="75" y5="45" fill-style="none" x1="50" x2="20" x3="35" x4="65" x5="80">
                            <showIf value="Multiple" property="Type" sign="="/>
                        </polygon>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="15" y2="85" fill-style="none" x1="15" x2="85">
                            <showIf value="Timer" property="Type" sign="="/>
                        </ellipse>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="20" fill-style="none" x1="50" x2="55">
                            <showIf value="Timer" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="48" fill-style="none" x1="50" x2="75">
                            <showIf value="Timer" property="Type" sign="="/>
                        </line>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="20" y2="80" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="35" y2="35" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="50" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="65" y2="65" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="6" x1="40" y1="50" x2="20" y2="75" x3="35" y3="20" x4="60" y4="50" x5="80" y5="25" x6="65" y6="80" fill-style="none">
                            <showIf value="Error" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="4" x1="50" x2="30" x3="50" x4="70" fill-style="none" y1="50" y2="70" y3="20" y4="70">
                            <showIf value="Escalation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="50" y2="30" y3="70" fill-style="none" x1="20" x2="45" x3="45">
                            <showIf value="Compensation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" x1="45" x2="70" x3="70" fill-style="none" y1="50" y2="30" y3="70">
                            <showIf value="Compensation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="25" y2="70" y3="70" fill-style="none" x1="50" x2="25" x3="75">
                            <showIf value="Signal" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="12" x1="15" y1="40" x2="40" y2="40" x3="40" y3="15" x4="60" y4="15" x5="60" y5="40" x6="85" y6="40" x7="85" y7="60" x8="60" y8="60" x9="60" y9="85" x10="40" y10="85" x11="40" y11="60" x12="15" y12="60" fill-style="none">
                            <showIf value="Parallel Multiple" property="Type" sign="="/>
                        </polygon>
                    </picture>
                    <labels>
                        <label x="0a" y="100a" textBinded="text"/>
                    </labels>
                    <ports>
                        <pointPort type="StartEventLeft" x="0" y="50"/>
                        <pointPort type="StartEventVertical" x="50" y="0"/>
                        <pointPort type="StartEventVertical" x="50" y="100"/>
                        <pointPort type="StartEventRight" x="100" y="50"/>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <properties>
                        <property type="StartEventType" name="Type" displayedName="Type">
                            <default>None</default>
                        </property>
                        <property type="string" name="text" displayedName="Text"/>
                    </properties>
                </logic>
            </node>
			<node name="NonInterruptingStartEvent" displayedName="Non-Interrupting Start Event">
                <graphics>
                    <picture sizex="100" sizey="100">
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" y1="0" y2="100" fill-style="none" x1="0" x2="100"/>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="30" y2="70" fill-style="none" x1="15" x2="85">
                            <showIf value="Message" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="30" y2="50" fill-style="none" x1="15" x2="50">
                            <showIf value="Message" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="30" fill-style="none" x1="50" x2="85">
                            <showIf value="Message" property="Type" sign="="/>
                        </line>
                        <polygon fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" n="5" y1="25" y2="45" y3="75" y4="75" y5="45" fill-style="none" x1="50" x2="20" x3="35" x4="65" x5="80">
                            <showIf value="Multiple" property="Type" sign="="/>
                        </polygon>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="15" y2="85" fill-style="none" x1="15" x2="85">
                            <showIf value="Timer" property="Type" sign="="/>
                        </ellipse>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="20" fill-style="none" x1="50" x2="55">
                            <showIf value="Timer" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="48" fill-style="none" x1="50" x2="75">
                            <showIf value="Timer" property="Type" sign="="/>
                        </line>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="20" y2="80" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="35" y2="35" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="50" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="65" y2="65" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="4" x1="50" x2="30" x3="50" x4="70" fill-style="none" y1="50" y2="70" y3="20" y4="70">
                            <showIf value="Escalation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="25" y2="70" y3="70" fill-style="none" x1="50" x2="25" x3="75">
                            <showIf value="Signal" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="12" x1="15" y1="40" x2="40" y2="40" x3="40" y3="15" x4="60" y4="15" x5="60" y5="40" x6="85" y6="40" x7="85" y7="60" x8="60" y8="60" x9="60" y9="85" x10="40" y10="85" x11="40" y11="60" x12="15" y12="60" fill-style="none">
                            <showIf value="Parallel Multiple" property="Type" sign="="/>
                        </polygon>
                    </picture>
                    <labels>
                        <label x="0a" y="100a" textBinded="text"/>
                    </labels>
                    <ports>
                        <pointPort type="StartEventLeft" x="0" y="50"/>
                        <pointPort type="StartEventVertical" x="50" y="0"/>
                        <pointPort type="StartEventVertical" x="50" y="100"/>
                        <pointPort type="StartEventRight" x="100" y="50"/>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <properties>
                        <property type="StartEventNonInterruptingType" name="Type" displayedName="Type">
                            <default>None</default>
                        </property>
                        <property type="string" name="text" displayedName="Text"/>
                    </properties>
                </logic>
            </node>
            <node name="IntermediateEvent" displayedName="Intermediate Event">
                <graphics>
                    <picture sizex="100" sizey="100">
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="0" y2="100" fill-style="none" x1="0" x2="100"/>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="7" y2="93" fill-style="none" x1="7" x2="93"/>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="30" y2="70" fill-style="none" x1="15" x2="85">
                            <showIf value="Receive Message" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="30" y2="50" fill-style="none" x1="15" x2="50">
                            <showIf value="Receive Message" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="30" fill-style="none" x1="50" x2="85">
                            <showIf value="Receive Message" property="Type" sign="="/>
                        </line>
                        <rectangle fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="2" y1="30" y2="70" fill-style="solid" x1="15" x2="85">
                            <showIf value="Send Message" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#ffffff" stroke-style="solid" stroke-width="2" y1="30" y2="50" fill-style="none" x1="15" x2="50">
                            <showIf value="Send Message" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#ffffff" stroke-style="solid" stroke-width="2" y1="50" y2="30" fill-style="none" x1="50" x2="85">
                            <showIf value="Send Message" property="Type" sign="="/>
                        </line>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="15" y2="85" fill-style="none" x1="15" x2="85">
                            <showIf value="Timer" property="Type" sign="="/>
                        </ellipse>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="20" fill-style="none" x1="50" x2="55">
                            <showIf value="Timer" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="48" fill-style="none" x1="50" x2="75">
                            <showIf value="Timer" property="Type" sign="="/>
                        </line>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="20" y2="80" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="35" y2="35" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="50" y2="50" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="65" y2="65" fill-style="none" x1="25" x2="75">
                            <showIf value="Conditional" property="Type" sign="="/>
                        </line>
                        <polygon fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" n="5" y1="25" y2="45" y3="75" y4="75" y5="45" fill-style="none" x1="50" x2="20" x3="35" x4="65" x5="80">
                            <showIf value="Multiple Catch" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="0" n="5" y1="25" y2="45" y3="75" y4="75" y5="45" fill-style="solid" x1="50" x2="20" x3="35" x4="65" x5="80">
                            <showIf value="Multiple Throw" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="4" x1="50" x2="30" x3="50" x4="70" fill-style="solid" y1="50" y2="70" y3="20" y4="70">
                            <showIf value="Escalation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="50" y2="30" y3="70" fill-style="solid" x1="20" x2="45" x3="45">
                            <showIf value="Compensation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" x1="45" x2="70" x3="70" fill-style="solid" y1="50" y2="30" y3="70">
                            <showIf value="Compensation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="25" y2="70" y3="70" fill-style="none" x1="50" x2="25" x3="75">
                            <showIf value="Catch Signal" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="25" y2="70" y3="70" fill-style="solid" x1="50" x2="25" x3="75">
                            <showIf value="Throw Signal" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="7" x1="15" y1="30" x2="70" y2="30" x3="70" y3="20" x4="85" y4="50" x5="70" y5="80" x6="70" y6="70" x7="15" y7="70" fill-style="none">
                            <showIf value="Catch Link" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="7" x1="15" y1="30" x2="70" y2="30" x3="70" y3="20" x4="85" y4="50" x5="70" y5="80" x6="70" y6="70" x7="15" y7="70" fill-style="solid">
                            <showIf value="Throw Link" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="12" x1="15" y1="40" x2="40" y2="40" x3="40" y3="15" x4="60" y4="15" x5="60" y5="40" x6="85" y6="40" x7="85" y7="60" x8="60" y8="60" x9="60" y9="85" x10="40" y10="85" x11="40" y11="60" x12="15" y12="60" fill-style="none">
                            <showIf value="Parallel Multiple (Catch)" property="Type" sign="="/>
                        </polygon>
                    </picture>
                    <labels>
                        <label x="0a" y="100a" textBinded="text"/>
                    </labels>
                    <ports>
                        <pointPort type="IntermediateEventLeft" x="0" y="50"/>
                        <pointPort type="IntermediateEventVertical" x="50" y="0"/>
                        <pointPort type="IntermediateEventVertical" x="50" y="100"/>
                        <pointPort type="IntermediateEventRight" x="100" y="50"/>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <properties>
                        <property type="IntermediateEventType" name="Type" displayedName="Type">
                            <default>None</default>
                        </property>
                        <property type="string" name="text" displayedName="Text"/>
                    </properties>
                </logic>
            </node>
            <node name="EndEvent" displayedName="End Event">
                <graphics>
                    <picture sizex="100" sizey="100">
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="10" y1="3" y2="97" fill-style="none" x1="3" x2="97"/>
                        <rectangle fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="2" y1="30" y2="70" fill-style="solid" x1="15" x2="85">
                            <showIf value="Message" property="Type" sign="="/>
                        </rectangle>
                        <line fill="#000000" stroke="#ffffff" stroke-style="solid" stroke-width="2" y1="30" y2="50" fill-style="solid" x1="15" x2="50">
                            <showIf value="Message" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#ffffff" stroke-style="solid" stroke-width="2" y1="50" y2="30" fill-style="none" x1="50" x2="85">
                            <showIf value="Message" property="Type" sign="="/>
                        </line>
                        <ellipse fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" y1="15" y2="85" fill-style="solid" x1="15" x2="85">
                            <showIf value="Terminate" property="Type" sign="="/>
                        </ellipse>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="25" y2="70" y3="70" fill-style="solid" x1="50" x2="25" x3="75">
                            <showIf value="Signal" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="0" n="5" y1="25" y2="45" y3="75" y4="75" y5="45" fill-style="solid" x1="50" x2="20" x3="35" x4="65" x5="80">
                            <showIf value="Multiple" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="4" x1="50" x2="30" x3="50" x4="70" fill-style="solid" y1="50" y2="70" y3="20" y4="70">
                            <showIf value="Escalation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="50" y2="30" y3="70" fill-style="solid" x1="20" x2="45" x3="45">
                            <showIf value="Compensation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" x1="45" x2="70" x3="70" fill-style="solid" y1="50" y2="30" y3="70">
                            <showIf value="Compensation" property="Type" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="6" x1="40" y1="50" x2="20" y2="75" x3="35" y3="20" x4="60" y4="50" x5="80" y5="25" x6="65" y6="80" fill-style="solid">
                            <showIf value="Error" property="Type" sign="="/>
                        </polygon>
                        <line fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="10" y1="25" y2="75" fill-style="solid" x1="25" x2="75">
                            <showIf value="Cancel" property="Type" sign="="/>
                        </line>
                        <line fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="10" y1="25" y2="75" fill-style="solid" x1="75" x2="25">
                            <showIf value="Cancel" property="Type" sign="="/>
                        </line>
                    </picture>
                    <labels>
                        <label x="0a" y="100a" textBinded="text"/>
                    </labels>
                    <ports>
                        <pointPort type="EndEventLeft" x="0" y="50"/>
                        <pointPort type="EndEventVertical" x="50" y="0"/>
                        <pointPort type="EndEventVertical" x="50" y="100"/>
                        <pointPort type="EndEventRight" x="100" y="50"/>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <properties>
                        <property type="EndEventType" name="Type" displayedName="Type">
                            <default>None</default>
                        </property>
                        <property type="string" name="text" displayedName="Text"/>
                    </properties>
                </logic>
            </node>
            <node name="Gateway" displayedName="Gateway">
                <graphics>
                    <picture sizex="110" sizey="110">
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="0" y2="55" fill-style="none" x1="55" x2="0"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="55" y2="110" fill-style="none" x1="0" x2="55"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="110" y2="55" fill-style="none" x1="55" x2="110"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="0" y2="55" fill-style="none" x1="55" x2="110"/>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="5" y1="22" y2="88" fill-style="none" x1="22" x2="88">
                            <showIf value="Inclusive" property="Type" sign="="/>
                        </ellipse>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="25" y2="85" fill-style="none" x1="25" x2="85">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </ellipse>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="20" y2="90" fill-style="none" x1="20" x2="90">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </ellipse>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="33" y2="52" fill-style="none" x1="55" x2="35">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="75" y2="52" fill-style="none" x1="42" x2="35">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="75" y2="75" fill-style="none" x1="42" x2="68">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="75" y2="52" fill-style="none" x1="68" x2="75">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="33" y2="52" fill-style="none" x1="55" x2="75">
                            <showIf value="Exclusive (Event Based)" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="6" y1="30" y2="80" fill-style="none" x1="55" x2="55">
                            <showIf value="Parallel" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="6" y1="55" y2="55" fill-style="none" x1="30" x2="80">
                            <showIf value="Parallel" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="6" y1="30" y2="80" fill-style="none" x1="55" x2="55">
                            <showIf value="Complex" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="6" y1="55" y2="55" fill-style="none" x1="30" x2="80">
                            <showIf value="Complex" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="6" y1="35" y2="75" fill-style="none" x1="35" x2="75">
                            <showIf value="Complex" property="Type" sign="="/>
                        </line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="6" y1="35" y2="75" fill-style="none" x1="75" x2="35">
                            <showIf value="Complex" property="Type" sign="="/>
                        </line>
                    </picture>
                    <labels>
                        <label x="0a" y="110a" textBinded="text"/>
                    </labels>
                    <ports>
                        <pointPort type="GatewayLeft" x="0" y="55"/>
                        <pointPort type="GatewayVertical" x="55" y="0"/>
                        <pointPort type="GatewayVertical" x="55" y="110"/>
                        <pointPort type="GatewayRight" x="110" y="55"/>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <properties>
                        <property type="GatewayType" name="Type" displayedName="Type">
                            <default>Exclusive (Data Based)</default>
                        </property>
                        <property type="string" name="text" displayedName="Text"/>
                    </properties>
                </logic>
            </node>
            <node name="Task" displayedName="Task">
                <graphics>
                    <picture sizex="210" sizey="160">
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="45" y2="115" fill-style="none" x1="18" x2="18"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="18" y2="18" fill-style="none" x1="45" x2="165"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="45" y2="115" fill-style="none" x1="192" x2="192"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="142" y2="142" fill-style="none" x1="45" x2="165"/>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="18" starty="45"/>
                            <end endx="45" endy="18"/>
                            <ctrl x="15" y="15"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="192" starty="45"/>
                            <end endx="165" endy="18"/>
                            <ctrl x="195" y="15"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="165" starty="142"/>
                            <end endx="192" endy="115"/>
                            <ctrl x="195" y="145"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="18" starty="115"/>
                            <end endx="45" endy="142"/>
                            <ctrl x="15" y="145"/>
                        </curve>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="80" x2="80">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="90" x2="90">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="100" x2="100">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="115" fill="#ffffff" y2="115" stroke="#000000" x1="82" x2="98">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="125" fill="#ffffff" y2="125" stroke="#000000" x1="82" x2="98">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="135" fill="#ffffff" y2="135" stroke="#000000" x1="82" x2="98">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="115" y2="135" fill-style="none" x1="80" x2="100">
							<showIf value="Standard Loop" property="loopType" sign="="/>
						</ellipse>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="135" fill="#ffffff" y2="136" stroke="#000000" x1="90" x2="86">
                            <showIf value="Standard Loop" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="135" fill="#ffffff" y2="132" stroke="#000000" x1="90" x2="87">
                            <showIf value="Standard Loop" property="loopType" sign="="/>
                        </line>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="125" y2="115" y3="135" fill-style="none" x1="110" x2="125" x3="125">
                            <showIf value="true" property="isForCompensation" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" x1="125" x2="140" x3="140" fill-style="none" y1="125" y2="115" y3="135">
                            <showIf value="true" property="isForCompensation" sign="="/>
                        </polygon>
                    </picture>
                    <labels>
                        <label x="46a" y="55a" textBinded="Text"/>
                    </labels>
                    <ports>
                        <linePort type="TaskLeft">
                            <start startx="18" starty="45"/>
                            <end endx="18" endy="115"/>
                        </linePort>
                        <linePort type="TaskVertical">
                            <start startx="45" starty="18"/>
                            <end endx="165" endy="18"/>
                        </linePort>
                        <linePort type="TaskRight">
                            <start startx="192" starty="45"/>
                            <end endx="192" endy="115"/>
                        </linePort>
                        <linePort type="TaskVertical">
                            <start startx="45" starty="142"/>
                            <end endx="165" endy="142"/>
                        </linePort>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <properties>
                        <property type="string" name="text" displayedName="Text"/>
                        <property type="LoopType" name="loopType" displayedName="Loop Type"/>
                        <property type="string" name="Name" displayedName="Name"/>
						<property type="bool" name="isForCompensation" displayedName="isForCompensation">
							<default>false</default>
						</property>
						<property type="string" name="loopCondition" displayedName="Loop Condition"/>
						<property type="TaskType" name="taskType" displayedName="Task Type">
							<default>Abstract</default>
						</property>
                    </properties>
                </logic>
            </node>
            <node name="Subprocess" displayedName="Subprocess">
                <graphics>
                    <picture sizex="210" sizey="160">
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="45" y2="115" fill-style="none" x1="18" x2="18"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="18" y2="18" fill-style="none" x1="45" x2="165"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="45" y2="115" fill-style="none" x1="192" x2="192"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="142" y2="142" fill-style="none" x1="45" x2="165"/>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="18" starty="45"/>
                            <end endx="45" endy="18"/>
                            <ctrl x="15" y="15"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="192" starty="45"/>
                            <end endx="165" endy="18"/>
                            <ctrl x="195" y="15"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="165" starty="142"/>
                            <end endx="192" endy="115"/>
                            <ctrl x="195" y="145"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="18" starty="115"/>
                            <end endx="45" endy="142"/>
                            <ctrl x="15" y="145"/>
                        </curve>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="42" y2="118" fill-style="none" x1="15" x2="15">
							<showIf value="true" property="transaction" sign="="/>
						</line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="15" y2="15" fill-style="none" x1="42" x2="168">
							<showIf value="true" property="transaction" sign="="/>
						</line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="42" y2="118" fill-style="none" x1="195" x2="195">
							<showIf value="true" property="transaction" sign="="/>
						</line>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="145" y2="145" fill-style="none" x1="42" x2="168">
							<showIf value="true" property="transaction" sign="="/>
						</line>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="15" starty="42"/>
                            <end endx="42" endy="15"/>
                            <ctrl x="13" y="13"/>
							<showIf value="true" property="transaction" sign="="/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="195" starty="45"/>
                            <end endx="168" endy="15"/>
                            <ctrl x="197" y="13"/>
							<showIf value="true" property="transaction" sign="="/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="168" starty="145"/>
                            <end endx="195" endy="118"/>
                            <ctrl x="197" y="147"/>
							<showIf value="true" property="transaction" sign="="/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="15" starty="115"/>
                            <end endx="42" endy="145"/>
                            <ctrl x="13" y="147"/>
							<showIf value="true" property="transaction" sign="="/>
                        </curve>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="115" y2="135" fill-style="none" x1="95" x2="115"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="118" y2="132" fill-style="none" x1="105" x2="105"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="125" y2="125" fill-style="none" x1="98" x2="112"/>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="70" x2="70">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="80" x2="80">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="90" x2="90">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="115" fill="#ffffff" y2="115" stroke="#000000" x1="72" x2="88">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="125" fill="#ffffff" y2="125" stroke="#000000" x1="72" x2="88">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="135" fill="#ffffff" y2="135" stroke="#000000" x1="72" x2="88">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="115" y2="135" fill-style="none" x1="70" x2="90">
							<showIf value="Standard Loop" property="loopType" sign="="/>
						</ellipse>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="135" fill="#ffffff" y2="136" stroke="#000000" x1="80" x2="76">
                            <showIf value="Standard Loop" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="135" fill="#ffffff" y2="132" stroke="#000000" x1="80" x2="77">
                            <showIf value="Standard Loop" property="loopType" sign="="/>
                        </line>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="125" y2="115" y3="135" fill-style="none" x1="120" x2="135" x3="135">
                            <showIf value="true" property="isForCompensation" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" x1="135" x2="150" x3="150" fill-style="none" y1="125" y2="115" y3="135">
                            <showIf value="true" property="isForCompensation" sign="="/>
                        </polygon>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="45" starty="125"/>
                            <end endx="55" endy="125"/>
                            <ctrl x="50" y="120"/>
							<showIf value="true" property="adHoc" sign="="/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" fill-style="none">
                            <start startx="55" starty="125"/>
                            <end endx="65" endy="125"/>
                            <ctrl x="60" y="130"/>
							<showIf value="true" property="adHoc" sign="="/>
                        </curve>
                    </picture>
                    <labels>
                        <label x="40a" y="145a" textBinded="Text"/>
                    </labels>
                    <ports>
                        <linePort type="SubprocessLeft">
                            <start startx="18" starty="45"/>
                            <end endx="18" endy="115"/>
                        </linePort>
                        <linePort type="SubprocessVertical">
                            <start startx="45" starty="18"/>
                            <end endx="165" endy="18"/>
                        </linePort>
                        <linePort type="SubprocessRight">
                            <start startx="192" starty="45"/>
                            <end endx="192" endy="115"/>
                        </linePort>
                        <linePort type="SubprocessVertical">
                            <start startx="45" starty="142"/>
                            <end endx="165" endy="142"/>
                        </linePort>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <explodesTo>
                        <target type="BPMNDiagramNode" makeReusable="false" requireImmediateLinkage="false"/>
                    </explodesTo>
                    <properties>
                        <property type="string" name="Text" displayedName="Text"/>
                        <property type="LoopType" name="loopType" displayedName="Loop Type"/>
						<property type="bool" name="isForCompensation" displayedName="isForCompensation">
							<default>false</default>
						</property>
						<property type="bool" name="adHoc" displayedName="ad Hoc">
							<default>false</default>
						</property>
						<property type="string" name="loopCondition" displayedName="Loop Condition"/>
						<property type="bool" name="transaction" displayedName="Transaction">
							<default>false</default>
						</property>
                    </properties>
                </logic>
            </node>
            <node name="EventSubprocess" displayedName="Event Subprocess">
                <graphics>
                    <picture sizex="210" sizey="160">
                        <line fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" y1="45" y2="115" fill-style="none" x1="18" x2="18"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" y1="18" y2="18" fill-style="none" x1="45" x2="165"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" y1="45" y2="115" fill-style="none" x1="192" x2="192"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" y1="142" y2="142" fill-style="none" x1="45" x2="165"/>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" fill-style="none">
                            <start startx="18" starty="45"/>
                            <end endx="45" endy="18"/>
                            <ctrl x="15" y="15"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" fill-style="none">
                            <start startx="192" starty="45"/>
                            <end endx="165" endy="18"/>
                            <ctrl x="195" y="15"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" fill-style="none">
                            <start startx="165" starty="142"/>
                            <end endx="192" endy="115"/>
                            <ctrl x="195" y="145"/>
                        </curve>
                        <curve fill="#ffffff" stroke="#000000" stroke-style="dash" stroke-width="0" fill-style="none">
                            <start startx="18" starty="115"/>
                            <end endx="45" endy="142"/>
                            <ctrl x="15" y="145"/>
                        </curve>
                        <rectangle fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="115" y2="135" fill-style="none" x1="95" x2="115"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="118" y2="132" fill-style="none" x1="105" x2="105"/>
                        <line fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="125" y2="125" fill-style="none" x1="98" x2="112"/>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="70" x2="70">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="80" x2="80">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="117" fill="#ffffff" y2="133" stroke="#000000" x1="90" x2="90">
                            <showIf value="Multiple Instances (Parallel)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="115" fill="#ffffff" y2="115" stroke="#000000" x1="72" x2="88">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="125" fill="#ffffff" y2="125" stroke="#000000" x1="72" x2="88">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="3" y1="135" fill="#ffffff" y2="135" stroke="#000000" x1="72" x2="88">
                            <showIf value="Multiple Instances (Sequential)" property="loopType" sign="="/>
                        </line>
                        <ellipse fill="#ffffff" stroke="#000000" stroke-style="solid" stroke-width="0" y1="115" y2="135" fill-style="none" x1="70" x2="90">
							<showIf value="Standard Loop" property="loopType" sign="="/>
						</ellipse>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="135" fill="#ffffff" y2="136" stroke="#000000" x1="80" x2="76">
                            <showIf value="Standard Loop" property="loopType" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="135" fill="#ffffff" y2="132" stroke="#000000" x1="80" x2="77">
                            <showIf value="Standard Loop" property="loopType" sign="="/>
                        </line>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" y1="125" y2="115" y3="135" fill-style="none" x1="120" x2="135" x3="135">
                            <showIf value="true" property="isForCompensation" sign="="/>
                        </polygon>
                        <polygon fill="#000000" stroke="#000000" stroke-style="solid" stroke-width="1" n="3" x1="135" x2="150" x3="150" fill-style="none" y1="125" y2="115" y3="135">
                            <showIf value="true" property="isForCompensation" sign="="/>
                        </polygon>
                    </picture>
                    <labels>
                        <label x="46a" y="55a" textBinded="Text"/>
                    </labels>
                    <ports>
                        <linePort type="EventSubprocessLeft">
                            <start startx="18" starty="45"/>
                            <end endx="18" endy="115"/>
                        </linePort>
                        <linePort type="EventSubprocessVertical">
                            <start startx="45" starty="18"/>
                            <end endx="165" endy="18"/>
                        </linePort>
                        <linePort type="EventSubprocessRight">
                            <start startx="192" starty="45"/>
                            <end endx="192" endy="115"/>
                        </linePort>
                        <linePort type="EventSubprocessVertical">
                            <start startx="45" starty="142"/>
                            <end endx="165" endy="142"/>
                        </linePort>
                    </ports>
                </graphics>
                <logic>
                    <container/>
                    <explodesTo>
                        <target type="BPMNDiagramNode" makeReusable="false" requireImmediateLinkage="false"/>
                    </explodesTo>
                    <properties>
                        <property type="string" name="text" displayedName="Text"/>
                        <property type="LoopType" name="loopType" displayedName="Loop Type"/>
                        <property type="string" name="Name" displayedName="Name"/>
						<property type="bool" name="isForCompensation" displayedName="isForCompensation">
							<default>false</default>
						</property>
						<property type="string" name="loopCondition" displayedName="Loop Condition"/>
                    </properties>
                </logic>
            </node>
			<node name="DataObject" displayedName="Data Object">
				<graphics>
					<picture sizex="50" sizey="80">
						<polygon fill="#000000" stroke="#000000" stroke-style="solid" fill-style="none" stroke-width="1" n="5" x1="0" y1="0" x2="40" y2="0" x3="50" y3="10" x4="50" y4="80" x5="0" y5="80"/>
						<line fill="#000000" stroke="#000000" stroke-style="solid" fill-style="none" stroke-width="1" x1="40" y1="0" x2="40" y2="10"/>
						<line fill="#000000" stroke="#000000" stroke-style="solid" fill-style="none" stroke-width="1" x1="40" y1="10" x2="50" y2="10"/>
					</picture>
					<labels>
						<label x="1a" y="81a" textBinded="Text"/>
					</labels>
					<ports>
						<linePort type="DataVertical">
							<start startx="3" starty="0"/>
							<end endx="47" endy="0"/>
						</linePort>
						<linePort type="DataVertical">
							<start startx="3" starty="80"/>
							<end endx="47" endy="80"/>
						</linePort>
						<linePort type="DataLeft">
							<start startx="0" starty="3"/>
							<end endx="0" endy="77"/>
						</linePort>
						<linePort type="DataRight">
							<start startx="50" starty="3"/>
							<end endx="50" endy="77"/>
						</linePort>
					</ports>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property type="string" name="Text" displayedName="Text"/>
					</properties>
				</logic>
			</node>
     		<edge name="DataAssociation" displayedName="Data Association">
				<graphics>
					<lineType type="dotLine"/>
					<labels/>
				</graphics>
				<logic>
					<associations endType="open_arrow" beginType="no_arrow">
						<association endName="end" beginName="start"/>
					</associations>
					<properties/>
					<fromPorts>
						<port type="IntermediateEventVertical"/>
						<port type="IntermediateEventRight"/>
						<port type="EndEventVertical"/>
						<port type="EndEventRight"/>
					</fromPorts>
					<toPorts>
						<port type="IntermediateEventVertical"/>
						<port type="IntermediateEventLeft"/>
						<port type="StartEventVertical"/>
						<port type="StartEventLeft"/>
					</toPorts>
				</logic>
			</edge>
            <edge name="SequenceFlow" displayedName="Sequence Flow">
                <graphics>
                    <lineType type="solidLine"/>
                    <labels>
                        <label textBinded="Text"/>
                    </labels>
                </graphics>
                <logic>
                    <dividability isDividable="true"/>
                    <associations endType="filled_arrow" beginType="no_arrow">
                        <association endName="end" beginName="start"/>
                    </associations>
                    <properties>
                        <property type="string" displayedName="Text" name="Text"/>
                        <property type="string" displayedName="Name" name="Name"/>
						<property type="bool" displayedName="Default" name="default"/>
						<property type="string" displayedName="Condition" name="condition"/>
                    </properties>
                    <fromPorts>
                        <port type="StartEventRight"/>
                        <port type="StartEventVertical"/>
                        <port type="IntermediateEventVertical"/>
                        <port type="IntermediateEventRight"/>
                        <port type="TaskRight"/>
                        <port type="TaskVertical"/>
                        <port type="SubprocessRight"/>
                        <port type="SubprocessVertical"/>
                        <port type="GatewayVertical"/>
                        <port type="GatewayRight"/>
                    </fromPorts>
                    <toPorts>
                        <port type="IntermediateEventVertical"/>
                        <port type="IntermediateEventLeft"/>
                        <port type="TaskLeft"/>
                        <port type="TaskVertical"/>
                        <port type="SubprocessLeft"/>
                        <port type="SubprocessVertical"/>
                        <port type="GatewayVertical"/>
                        <port type="GatewayLeft"/>
                        <port type="EndEventLeft"/>
                        <port type="EndEventVertical"/>
                    </toPorts>
                    <possibleEdges>
                        <possibleEdge beginName="StartEventRight" directed="true" endName="IntermediateEventLeft"/>
                        <possibleEdge beginName="StartEventRight" directed="true" endName="EndEventLeft"/>
                        <possibleEdge beginName="StartEventRight" directed="true" endName="GatewayLeft"/>
                        <possibleEdge beginName="StartEventRight" directed="true" endName="TaskLeft"/>
                        <possibleEdge beginName="StartEventRight" directed="true" endName="SubprocessLeft"/>
                        <possibleEdge beginName="IntermediateEventRight" directed="true" endName="IntermediateEventLeft"/>
                        <possibleEdge beginName="IntermediateEventRight" directed="true" endName="EndEventLeft"/>
                        <possibleEdge beginName="IntermediateEventRight" directed="true" endName="GatewayLeft"/>
                        <possibleEdge beginName="IntermediateEventRight" directed="true" endName="TaskLeft"/>
                        <possibleEdge beginName="IntermediateEventRight" directed="true" endName="SubprocessLeft"/>
                        <possibleEdge beginName="TaskRight" directed="true" endName="IntermediateEventLeft"/>
                        <possibleEdge beginName="SubprocessRight" directed="true" endName="IntermediateEventLeft"/>
                        <possibleEdge beginName="TaskRight" directed="true" endName="EndEventLeft"/>
                        <possibleEdge beginName="SubprocessRight" directed="true" endName="EndEventLeft"/>
                        <possibleEdge beginName="TaskRight" directed="true" endName="GatewayLeft"/>
                        <possibleEdge beginName="SubprocessRight" directed="true" endName="GatewayLeft"/>
                        <possibleEdge beginName="TaskRight" directed="true" endName="TaskLeft"/>
                        <possibleEdge beginName="SubprocessRight" directed="true" endName="TaskLeft"/>
                        <possibleEdge beginName="TaskRight" directed="true" endName="SubprocessLeft"/>
                        <possibleEdge beginName="SubprocessRight" directed="true" endName="SubprocessLeft"/>
                        <possibleEdge beginName="GatewayRight" directed="true" endName="IntermediateEventLeft"/>
                        <possibleEdge beginName="GatewayRight" directed="true" endName="EndEventLeft"/>
                        <possibleEdge beginName="GatewayRight" directed="true" endName="GatewayLeft"/>
                        <possibleEdge beginName="GatewayRight" directed="true" endName="TaskLeft"/>
                        <possibleEdge beginName="GatewayRight" directed="true" endName="SubprocessLeft"/>
                    </possibleEdges>
                </logic>
            </edge>
	       <edge name="MessageFlow" displayedName="Message Flow">
                <graphics>
                    <lineType type="dashLine"/>
                    <labels>
                        <label textBinded="Text"/>
                    </labels>
                </graphics>
                <logic>
                    <associations endType="open_arrow" beginType="empty_circle">
                        <association endName="end" beginName="start"/>
                    </associations>
                    <properties>
                        <property type="string" displayedName="Text" name="Text"/>
                    </properties>
                    <fromPorts>
                        <port type="IntermediateEventVertical"/>
                        <port type="EndEventVertical"/>
                        <port type="TaskVertical"/>
                        <port type="SubprocessVertical"/>
                    </fromPorts>
                    <toPorts>
                        <port type="IntermediateEventVertical"/>
                        <port type="StartEventVertical"/>
                        <port type="TaskVertical"/>
                        <port type="SubprocessVertical"/>
                    </toPorts>
                    <possibleEdges/>
                </logic>
            </edge>
            <edge name="SignalBoundaryEvent" displayedName="Signal (Interrupting)">
                <graphics>
                    <lineType type="solidLine"/>
                    <labels>
                        <label textBinded="Text"/>
                    </labels>
                </graphics>
                <logic>
                    <associations endType="filled_arrow" beginType="signal">
                        <association endName="end" beginName="start"/>
                    </associations>
                    <properties>
                        <property type="string" displayedName="Text" name="Text"/>
                    </properties>
                    <fromPorts>
                        <port type="TaskVertical"/>
                        <port type="TaskLeft"/>
                        <port type="TaskRight"/>
                        <port type="SubprocessVertical"/>
                        <port type="SubprocessLeft"/>
                        <port type="SubprocessRight"/>
                        <port type="EventSubprocessVertical"/>
                        <port type="EventSubprocessLeft"/>
                        <port type="EventSubprocessRight"/>
                    </fromPorts>
                    <toPorts>
                        <port type="IntermediateEventVertical"/>
                        <port type="IntermediateEventLeft"/>
                        <port type="TaskLeft"/>
                        <port type="TaskVertical"/>
                        <port type="SubprocessVertical"/>
                        <port type="SubprocessLeft"/>
                        <port type="GatewayVertical"/>
                        <port type="GatewayLeft"/>
                        <port type="EndEventLeft"/>
                        <port type="EndEventVertical"/>
                    </toPorts>
                </logic>
          </edge>
          <edge name="SignalNoninterruptingBoundaryEvent" displayedName="Signal (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="signal_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                      <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="TimerBoundaryEvent" displayedName="Timer (Interrupting)">
                <graphics>
                    <lineType type="solidLine"/>
                    <labels>
                        <label textBinded="Text"/>
                    </labels>
                </graphics>
                <logic>
                    <associations endType="filled_arrow" beginType="timer">
                        <association endName="end" beginName="start"/>
                    </associations>
                    <properties>
                        <property type="string" displayedName="Text" name="Text"/>
                    </properties>
                    <fromPorts>
                        <port type="TaskVertical"/>
                        <port type="TaskLeft"/>
                        <port type="TaskRight"/>
                        <port type="SubprocessVertical"/>
                        <port type="SubprocessLeft"/>
                        <port type="SubprocessRight"/>
                        <port type="EventSubprocessVertical"/>
                        <port type="EventSubprocessLeft"/>
                        <port type="EventSubprocessRight"/>
                    </fromPorts>
                    <toPorts>
                        <port type="IntermediateEventVertical"/>
                        <port type="IntermediateEventLeft"/>
                        <port type="TaskLeft"/>
                        <port type="TaskVertical"/>
                        <port type="SubprocessLeft"/>
                        <port type="SubprocessVertical"/>
                        <port type="GatewayVertical"/>
                        <port type="GatewayLeft"/>
                        <port type="EndEventLeft"/>
                        <port type="EndEventVertical"/>
                    </toPorts>
                </logic>
          </edge>
          <edge name="TimerNoninterruptingBoundaryEvent" displayedName="Timer (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="timer_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="MessageBoundaryEvent" displayedName="Message (Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="message">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="MessageNoninterruptingBoundaryEvent" displayedName="Message (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="message_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="ErrorBoundaryEvent" displayedName="Error">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="error">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="EscalationBoundaryEvent" displayedName="Escalation">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="escalation">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="EscalationNoninterruptingBoundaryEvent" displayedName="Escalation (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="escalation_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="CancelBoundaryEvent" displayedName="Cancel">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="cancel">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="CompensationBoundaryEvent" displayedName="Compensation">
               <graphics>
                   <lineType type="dotLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="compensation">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="ConditionalBoundaryEvent" displayedName="Conditional (Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="conditional">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="ConditionalNoninterruptingBoundaryEvent" displayedName="Conditional (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="conditional_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="MultipleBoundaryEvent" displayedName="Multiple (Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="multiple">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="MultipleNoninterruptingBoundaryEvent" displayedName="Multiple (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="multiple_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="ParallelMultipleBoundaryEvent" displayedName="Parallel Multiple (Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="parallel_multiple">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <edge name="ParallelMultipleNoninterruptingBoundaryEvent" displayedName="Parallel Multiple (Non-Interrupting)">
               <graphics>
                   <lineType type="solidLine"/>
                   <labels>
                       <label textBinded="Text"/>
                   </labels>
               </graphics>
               <logic>
                   <associations endType="filled_arrow" beginType="parallel_multiple_noninterrupting">
                       <association endName="end" beginName="start"/>
                   </associations>
                   <properties>
                       <property type="string" displayedName="Text" name="Text"/>
                   </properties>
                   <fromPorts>
                       <port type="TaskVertical"/>
                       <port type="TaskLeft"/>
                       <port type="TaskRight"/>
                       <port type="SubprocessVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessRight"/>
                       <port type="EventSubprocessVertical"/>
                       <port type="EventSubprocessLeft"/>
                       <port type="EventSubprocessRight"/>
                   </fromPorts>
                   <toPorts>
                       <port type="IntermediateEventVertical"/>
                       <port type="IntermediateEventLeft"/>
                       <port type="TaskLeft"/>
                       <port type="TaskVertical"/>
                       <port type="SubprocessLeft"/>
                       <port type="SubprocessVertical"/>
                       <port type="GatewayVertical"/>
                       <port type="GatewayLeft"/>
                       <port type="EndEventLeft"/>
                       <port type="EndEventVertical"/>
                   </toPorts>
               </logic>
          </edge>
          <node name="Lane" displayedName="Lane">
                <graphics>
                    <picture sizex="450" sizey="150">
                        <rectangle stroke-style="solid" fill-style="none" stroke-width="0" y1="0" y2="150" fill="#ffffff" x1="0" stroke="#000000" x2="450"/>
                    </picture>
                    <labels>
                        <label x="2a" y="145a" textBinded="text" rotation="-90"/>
                    </labels>
                    <ports/>
                </graphics>
                <logic>
                    <container>
                        <contains type="EndEvent"/>
                        <contains type="StartEvent"/>
                        <contains type="IntermediateEvent"/>
                        <contains type="Gateway"/>
                        <contains type="Task"/>
                        <contains type="Subprocess"/>
                    </container>
                    <properties>
                        <property name="text" displayedName="Text" type="string"/>
                    </properties>
                </logic>
            </node>
            <node name="Pool" displayedName="Pool">
                <graphics>
                    <picture sizex="450" sizey="150">
                        <rectangle stroke-style="solid" fill-style="none" stroke-width="0" y1="0" fill="#ffffff" y2="150" stroke="#000000" x1="0" x2="450"/>
                        <line stroke-style="solid" fill-style="none" stroke-width="0" y1="0" fill="#ffffff" y2="150" stroke="#000000" x1="30a" x2="30a"/>
                        <line stroke-style="solid" fill-style="none" stroke-width="2" y1="125" fill="#ffffff" y2="145" stroke="#000000" x1="215" x2="215">
                            <showIf value="true" property="multiple" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="2" y1="125" fill="#ffffff" y2="145" stroke="#000000" x1="225" x2="225">
                            <showIf value="true" property="multiple" sign="="/>
                        </line>
                        <line stroke-style="solid" fill-style="none" stroke-width="2" y1="125" fill="#ffffff" y2="145" stroke="#000000" x1="235" x2="235">
                            <showIf value="true" property="multiple" sign="="/>
                        </line>
                    </picture>
                    <labels>
                        <label x="2a" y="145a" textBinded="text" rotation="-90"/>
                    </labels>
                    <ports/>
                    <nonResizable/>
                </graphics>
                <logic>
                    <container>
                        <contains type="Lane"/>
                        <properties>
                            <forestalling size="30,0,0,0"/>
                            <childrenForestalling size="0"/>
                            <sortContainer/>
                            <banChildrenMove/>
                            <minimizeToChildren/>
                            <maximizeChildren/>
                        </properties>
                    </container>
                    <properties>
                        <property name="text" displayedName="Text" type="string"/>
                        <property name="multiple" displayedName="Multiple" type="bool"/>
                    </properties>
                </logic>
            </node>
        </graphicTypes>
        <palette>
            <group name="Swimlanes">
                <element name="Pool"/>
                <element name="Lane"/>
            </group>
            <group name="Events">
                <element name="StartEvent"/>
                <element name="NonInterruptingStartEvent"/>
                <element name="IntermediateEvent"/>
                <element name="EndEvent"/>
            </group>
            <group name="Gateways">
                <element name="Gateway"/>
            </group>
            <group name="Activities">
                <element name="Task"/>
                <element name="Subprocess"/>
				<element name="EventSubprocess"/>
            </group>
            <group name="Flows">
                <element name="SequenceFlow"/>
                <element name="MessageFlow"/>
			</group>
			<group name="Boundary Events">
                <element name="SignalBoundaryEvent"/>
                <element name="SignalNoninterruptingBoundaryEvent"/>
                <element name="TimerBoundaryEvent"/>
                <element name="TimerNoninterruptingBoundaryEvent"/>
                <element name="CompensationBoundaryEvent"/>
                <element name="ErrorBoundaryEvent"/>
                <element name="CancelBoundaryEvent"/>
                <element name="EscalationBoundaryEvent"/>
                <element name="EscalationNoninterruptingBoundaryEvent"/>
                <element name="ConditionalBoundaryEvent"/>
                <element name="ConditionalNoninterruptingBoundaryEvent"/>
                <element name="MultipleBoundaryEvent"/>
                <element name="MultipleNoninterruptingBoundaryEvent"/>
                <element name="ParallelMultipleBoundaryEvent"/>
                <element name="ParallelMultipleNoninterruptingBoundaryEvent"/>
                <element name="MessageBoundaryEvent"/>
                <element name="MessageNoninterruptingBoundaryEvent"/>
            </group>
			<group name="Artifacts">
				<element name="DataObject"/>
				<element name="DataAssociation"/>
			</group>
        </palette>
    </diagram>
</metamodel>
